TCPDUMP
  user friendly expression
    src or dst
    host or net
    tcp or udp
  switches
    -A = ascii
    -D = list interfaces
    -i = specify cap interface
    -e = print data-link headers
    -X or XX = print payload in HEX and ASCII
    -V = verbose
    -w= write to pcap
    -r = read from pcap
  Logical operators
    concat: 'and' (&&)
    alteration: 'or' (||)
    Negation:'not' (!)
  Rational Operators
    < or <=
    > or >=
    = or == or !=
  BPF examples
  
    tcpdump -i eth0 'ether[12:2] = 0x0806'
    tcpdump -i eth1 'ip[9] = 0x06'
    tcpdump -i eth0 'tcp[0:2] = 53 || tcp[2:2] = 53'
    tcpdump 'ether[12:2] = 0x0800 && (tcp[2:2] != 22 && tcp[2:2] != 23)'
  
  Bitwise Masking
  
    BPFs can read 1 (byte), 2 (half-word) or 4 (word)
  
    BPFs alone will only filter to the byte level
  
    Bit-wise masking allow filtering precision to the bit level
  
    Binary (0) to ignore bit
  
    Binary (1) to match bit
  
    Use a BPF to filter packets entering a network interface
    BPFs at the Data-Link layer
    
    tcpdump 'ether[12:4] & 0xffff0fff = 0x81000abc'
    tcpdump 'ip[1] & 252 = 32'
    tcpdump 'ip[6] & 224 != 0'
    tcpdump 'tcp[13] & 0x11 = 0x11'
    tcpdump 'tcp[12] & 0xf0 > 0x50'
P0f
  good for rough guessing browsers and os's
  p0f -r capture.pcap
***********good website************
https://www.shellspells.net/network/packet-capture/tcpdump-examples
